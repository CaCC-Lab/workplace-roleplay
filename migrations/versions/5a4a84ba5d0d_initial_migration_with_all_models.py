"""Initial migration with all models

Revision ID: 5a4a84ba5d0d
Revises: 
Create Date: 2025-07-20 08:46:56.226003

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5a4a84ba5d0d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('achievements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('threshold_type', sa.String(length=50), nullable=False),
    sa.Column('threshold_value', sa.Integer(), nullable=False),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('scenarios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('yaml_id', sa.String(length=100), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('difficulty', sa.Enum('初級', '中級', '上級', '不明', name='difficulty_level_enum'), server_default='不明', nullable=False),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('scenarios', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_scenarios_yaml_id'), ['yaml_id'], unique=True)

    op.create_table('practice_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_uuid', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('scenario_id', sa.Integer(), nullable=True),
    sa.Column('session_type', sa.Enum('SCENARIO', 'FREE_TALK', 'WATCH', name='sessiontype'), nullable=False),
    sa.Column('ai_model', sa.String(length=50), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('ended_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['scenario_id'], ['scenarios.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_uuid')
    )
    with op.batch_alter_table('practice_sessions', schema=None) as batch_op:
        batch_op.create_index('idx_session_user_date', ['user_id', 'started_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_practice_sessions_scenario_id'), ['scenario_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_practice_sessions_user_id'), ['user_id'], unique=False)

    op.create_table('user_achievements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('achievement_id', sa.Integer(), nullable=False),
    sa.Column('unlocked_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('progress', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['achievement_id'], ['achievements.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'achievement_id', name='_user_achievement_uc')
    )
    with op.batch_alter_table('user_achievements', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_achievements_achievement_id'), ['achievement_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_achievements_user_id'), ['user_id'], unique=False)

    op.create_table('user_preferences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('theme', sa.String(length=20), nullable=False),
    sa.Column('font_size', sa.String(length=20), nullable=False),
    sa.Column('language', sa.String(length=10), nullable=False),
    sa.Column('voice_enabled', sa.Boolean(), nullable=False),
    sa.Column('voice_speed', sa.Float(), nullable=False),
    sa.Column('voice_pitch', sa.Float(), nullable=False),
    sa.Column('voice_volume', sa.Float(), nullable=False),
    sa.Column('breathing_guide_enabled', sa.Boolean(), nullable=False),
    sa.Column('breathing_duration', sa.Integer(), nullable=False),
    sa.Column('ambient_sound_enabled', sa.Boolean(), nullable=False),
    sa.Column('ambient_sound_type', sa.String(length=50), nullable=True),
    sa.Column('achievement_notifications', sa.Boolean(), nullable=False),
    sa.Column('practice_reminders', sa.Boolean(), nullable=False),
    sa.Column('reminder_time', sa.Time(), nullable=True),
    sa.Column('show_encouragement', sa.Boolean(), nullable=False),
    sa.Column('difficulty_preference', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('conversation_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('speaker', sa.String(length=50), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('message_type', sa.String(length=20), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('audio_data_id', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['practice_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('conversation_logs', schema=None) as batch_op:
        batch_op.create_index('idx_log_session_timestamp', ['session_id', 'timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_conversation_logs_session_id'), ['session_id'], unique=False)

    op.create_table('strength_analyses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('empathy', sa.Float(), nullable=False),
    sa.Column('clarity', sa.Float(), nullable=False),
    sa.Column('listening', sa.Float(), nullable=False),
    sa.Column('problem_solving', sa.Float(), nullable=False),
    sa.Column('assertiveness', sa.Float(), nullable=False),
    sa.Column('flexibility', sa.Float(), nullable=False),
    sa.Column('feedback_text', sa.Text(), nullable=True),
    sa.Column('overall_score', sa.Float(), nullable=True),
    sa.Column('improvement_suggestions', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['practice_sessions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('users_email_key'), type_='unique')
        batch_op.drop_constraint(batch_op.f('users_username_key'), type_='unique')
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.create_unique_constraint(batch_op.f('users_username_key'), ['username'], postgresql_nulls_not_distinct=False)
        batch_op.create_unique_constraint(batch_op.f('users_email_key'), ['email'], postgresql_nulls_not_distinct=False)

    op.drop_table('strength_analyses')
    with op.batch_alter_table('conversation_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_conversation_logs_session_id'))
        batch_op.drop_index('idx_log_session_timestamp')

    op.drop_table('conversation_logs')
    op.drop_table('user_preferences')
    with op.batch_alter_table('user_achievements', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_achievements_user_id'))
        batch_op.drop_index(batch_op.f('ix_user_achievements_achievement_id'))

    op.drop_table('user_achievements')
    with op.batch_alter_table('practice_sessions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_practice_sessions_user_id'))
        batch_op.drop_index(batch_op.f('ix_practice_sessions_scenario_id'))
        batch_op.drop_index('idx_session_user_date')

    op.drop_table('practice_sessions')
    with op.batch_alter_table('scenarios', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_scenarios_yaml_id'))

    op.drop_table('scenarios')
    op.drop_table('achievements')
    # ### end Alembic commands ###
