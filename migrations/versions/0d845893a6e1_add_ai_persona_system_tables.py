"""Add AI Persona system tables

Revision ID: 0d845893a6e1
Revises: 5a4a84ba5d0d
Create Date: 2025-07-28 00:42:29.159522

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0d845893a6e1'
down_revision = '5a4a84ba5d0d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ai_personas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('persona_code', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('name_reading', sa.String(length=100), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('gender', sa.String(length=20), nullable=True),
    sa.Column('industry', sa.Enum('IT', 'SALES', 'MANUFACTURING', 'HEALTHCARE', 'EDUCATION', 'FINANCE', 'RETAIL', 'CONSULTING', 'GOVERNMENT', 'CREATIVE', name='personaindustry'), nullable=False),
    sa.Column('role', sa.Enum('JUNIOR', 'SENIOR', 'TEAM_LEAD', 'MANAGER', 'EXECUTIVE', 'CLIENT', 'COLLEAGUE', 'SUBORDINATE', 'MENTOR', 'HR', name='personarole'), nullable=False),
    sa.Column('years_experience', sa.Integer(), nullable=True),
    sa.Column('company_size', sa.String(length=50), nullable=True),
    sa.Column('personality_type', sa.Enum('ANALYTICAL', 'DRIVER', 'AMIABLE', 'EXPRESSIVE', 'DETAIL_ORIENTED', 'BIG_PICTURE', 'INNOVATIVE', 'TRADITIONAL', name='personapersonality'), nullable=False),
    sa.Column('communication_style', sa.JSON(), nullable=True),
    sa.Column('stress_triggers', sa.JSON(), nullable=True),
    sa.Column('motivation_factors', sa.JSON(), nullable=True),
    sa.Column('background_story', sa.Text(), nullable=True),
    sa.Column('current_challenges', sa.JSON(), nullable=True),
    sa.Column('goals', sa.JSON(), nullable=True),
    sa.Column('expertise_areas', sa.JSON(), nullable=True),
    sa.Column('technical_skills', sa.JSON(), nullable=True),
    sa.Column('soft_skills', sa.JSON(), nullable=True),
    sa.Column('speech_patterns', sa.JSON(), nullable=True),
    sa.Column('vocabulary_level', sa.String(length=20), nullable=True),
    sa.Column('response_speed', sa.String(length=20), nullable=True),
    sa.Column('humor_level', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('ai_personas', schema=None) as batch_op:
        batch_op.create_index('idx_persona_active', ['is_active'], unique=False)
        batch_op.create_index('idx_persona_industry_role', ['industry', 'role'], unique=False)
        batch_op.create_index(batch_op.f('ix_ai_personas_persona_code'), ['persona_code'], unique=True)

    op.create_table('persona_scenario_configs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('persona_id', sa.Integer(), nullable=False),
    sa.Column('scenario_id', sa.Integer(), nullable=False),
    sa.Column('scenario_role', sa.String(length=100), nullable=True),
    sa.Column('initial_attitude', sa.String(length=50), nullable=True),
    sa.Column('cooperation_level', sa.Float(), nullable=True),
    sa.Column('scenario_goals', sa.JSON(), nullable=True),
    sa.Column('hidden_agenda', sa.Text(), nullable=True),
    sa.Column('trigger_points', sa.JSON(), nullable=True),
    sa.Column('difficulty_modifier', sa.Float(), nullable=True),
    sa.Column('hint_availability', sa.Boolean(), nullable=True),
    sa.Column('custom_greetings', sa.JSON(), nullable=True),
    sa.Column('custom_responses', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['persona_id'], ['ai_personas.id'], ),
    sa.ForeignKeyConstraint(['scenario_id'], ['scenarios.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('persona_id', 'scenario_id', name='_persona_scenario_uc')
    )
    with op.batch_alter_table('persona_scenario_configs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_persona_scenario_configs_persona_id'), ['persona_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_persona_scenario_configs_scenario_id'), ['scenario_id'], unique=False)

    op.create_table('persona_memories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('persona_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('memory_type', sa.String(length=50), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('importance_score', sa.Float(), nullable=True),
    sa.Column('context_tags', sa.JSON(), nullable=True),
    sa.Column('related_entities', sa.JSON(), nullable=True),
    sa.Column('occurred_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('access_count', sa.Integer(), nullable=True),
    sa.Column('last_accessed', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['persona_id'], ['ai_personas.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['practice_sessions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('persona_memories', schema=None) as batch_op:
        batch_op.create_index('idx_memory_persona_user', ['persona_id', 'user_id'], unique=False)
        batch_op.create_index('idx_memory_type_importance', ['memory_type', 'importance_score'], unique=False)
        batch_op.create_index(batch_op.f('ix_persona_memories_persona_id'), ['persona_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_persona_memories_user_id'), ['user_id'], unique=False)

    op.create_table('strength_analysis_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('task_id', sa.String(length=100), nullable=True),
    sa.Column('analysis_type', sa.String(length=50), nullable=True),
    sa.Column('skill_scores', sa.JSON(), nullable=True),
    sa.Column('overall_score', sa.Float(), nullable=True),
    sa.Column('top_strengths', sa.JSON(), nullable=True),
    sa.Column('encouragement_messages', sa.JSON(), nullable=True),
    sa.Column('raw_analysis', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['practice_sessions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_persona_interactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('persona_id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('rapport_level', sa.Float(), nullable=True),
    sa.Column('interaction_quality', sa.Float(), nullable=True),
    sa.Column('emotional_trajectory', sa.JSON(), nullable=True),
    sa.Column('key_moments', sa.JSON(), nullable=True),
    sa.Column('breakthroughs', sa.JSON(), nullable=True),
    sa.Column('conflicts', sa.JSON(), nullable=True),
    sa.Column('skills_demonstrated', sa.JSON(), nullable=True),
    sa.Column('areas_for_improvement', sa.JSON(), nullable=True),
    sa.Column('total_exchanges', sa.Integer(), nullable=True),
    sa.Column('user_word_count', sa.Integer(), nullable=True),
    sa.Column('persona_word_count', sa.Integer(), nullable=True),
    sa.Column('session_duration', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['persona_id'], ['ai_personas.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['practice_sessions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_persona_interactions', schema=None) as batch_op:
        batch_op.create_index('idx_interaction_user_rapport', ['user_id', 'rapport_level'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_persona_interactions_persona_id'), ['persona_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_persona_interactions_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_persona_interactions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_persona_interactions_user_id'))
        batch_op.drop_index(batch_op.f('ix_user_persona_interactions_persona_id'))
        batch_op.drop_index('idx_interaction_user_rapport')

    op.drop_table('user_persona_interactions')
    op.drop_table('strength_analysis_results')
    with op.batch_alter_table('persona_memories', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_persona_memories_user_id'))
        batch_op.drop_index(batch_op.f('ix_persona_memories_persona_id'))
        batch_op.drop_index('idx_memory_type_importance')
        batch_op.drop_index('idx_memory_persona_user')

    op.drop_table('persona_memories')
    with op.batch_alter_table('persona_scenario_configs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_persona_scenario_configs_scenario_id'))
        batch_op.drop_index(batch_op.f('ix_persona_scenario_configs_persona_id'))

    op.drop_table('persona_scenario_configs')
    with op.batch_alter_table('ai_personas', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_ai_personas_persona_code'))
        batch_op.drop_index('idx_persona_industry_role')
        batch_op.drop_index('idx_persona_active')

    op.drop_table('ai_personas')
    # ### end Alembic commands ###
