version: '3.8'

services:
  # Redis - キャッシュ、セッション、Celeryブローカー用
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Celeryワーカー
  celery_worker:
    build: .
    command: celery -A celery_app worker --loglevel=info --concurrency=4 -Q default,llm,feedback,analytics
    volumes:
      - .:/app
    environment:
      - FLASK_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Celery Beat（定期タスク用）
  celery_beat:
    build: .
    command: celery -A celery_app beat --loglevel=info
    volumes:
      - .:/app
    environment:
      - FLASK_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Flower（Celery監視ツール）
  flower:
    build: .
    command: celery -A celery_app flower --port=5555
    ports:
      - "5555:5555"
    volumes:
      - .:/app
    environment:
      - FLASK_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  # PostgreSQL（オプション）
  # postgres:
  #   image: postgres:16-alpine
  #   environment:
  #     POSTGRES_DB: workplace_roleplay
  #     POSTGRES_USER: app_user
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U app_user"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

volumes:
  redis_data:
  # postgres_data: